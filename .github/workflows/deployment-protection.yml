name: Deployment Protection

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'next.config.*'
      - 'tailwind.config.*'
      - '.env.*'

jobs:
  validate:
    name: Validate Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for sensitive data
        uses: actions/github-script@v7
        with:
          script: |
            const { exec } = require('child_process');
            const util = require('util');
            const execAsync = util.promisify(exec);
            
            const patterns = [
              'password',
              'secret',
              'token',
              'key',
              'apikey',
              'api_key',
              'private_key',
              'credential',
              'auth'
            ];
            
            const { stdout } = await execAsync('git diff origin/main... --name-only');
            const changedFiles = stdout.trim().split('\n');
            
            const issues = [];
            
            for (const file of changedFiles) {
              if (file && !file.endsWith('.env.example')) {
                const { stdout: content } = await execAsync(`git diff origin/main... ${file}`);
                patterns.forEach(pattern => {
                  const regex = new RegExp(`(?<![A-Za-z])(${pattern})\\s*[=:]\\s*["']?[A-Za-z0-9+/=]+["']?`, 'gi');
                  const matches = content.match(regex);
                  if (matches) {
                    issues.push(`Potential sensitive data in ${file}: ${matches.length} matches for pattern '${pattern}'`);
                  }
                });
              }
            }
            
            if (issues.length > 0) {
              const comment = `⚠️ **Security Check Warning**

              Potential sensitive data detected in this PR:
              ${issues.map(issue => `- ${issue}`).join('\n')}
              
              Please review these changes and ensure no secrets or credentials are being committed.`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
              
              core.setFailed('Potential sensitive data detected');
            }

      - name: Check dependency impact
        id: deps
        run: |
          OLD_DEPS=$(git show origin/main:package.json | jq -r '.dependencies + .devDependencies | keys | length')
          NEW_DEPS=$(jq -r '.dependencies + .devDependencies | keys | length' package.json)
          DIFF=$((NEW_DEPS - OLD_DEPS))
          echo "diff=$DIFF" >> $GITHUB_OUTPUT

      - name: Analyze dependency changes
        if: steps.deps.outputs.diff != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const diff = parseInt(process.env.DEPS_DIFF);
            const threshold = 5;
            
            if (Math.abs(diff) > threshold) {
              const message = `⚠️ **Large Dependency Change Detected**
              
              This PR ${diff > 0 ? 'adds' : 'removes'} ${Math.abs(diff)} dependencies.
              
              Please ensure these changes are necessary and review:
              - Impact on bundle size
              - Security implications
              - Build time impact
              - Maintenance overhead`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
              
              if (diff > threshold * 2) {
                core.setFailed('Excessive dependency changes detected');
              }
            }
        env:
          DEPS_DIFF: ${{ steps.deps.outputs.diff }}

      - name: Check breaking changes
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            
            // Get PR description
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Check for breaking change indicators
            const hasBreakingChanges = 
              pr.data.title.includes('BREAKING CHANGE') ||
              pr.data.body?.includes('BREAKING CHANGE') ||
              execSync('git log origin/main... --format=%B')
                .toString()
                .includes('BREAKING CHANGE');
            
            if (hasBreakingChanges) {
              const message = `🚨 **Breaking Changes Detected**
              
              This PR contains breaking changes. Please ensure:
              - Changes are documented in CHANGELOG.md
              - Migration guide is provided
              - Semantic version is bumped appropriately
              - Stakeholders are notified
              
              Consider creating a migration script if needed.`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
              
              // Add 'breaking-change' label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['breaking-change']
              });
            }
