name: Dependabot Auto-Merge
on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

permissions:
  pull-requests: write
  contents: write
  issues: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      # Auto-merge criteria check
      - name: Check auto-merge criteria
        id: auto-merge-check
        run: |
          UPDATE_TYPE="${{ steps.metadata.outputs.update-type }}"
          DEPENDENCY_TYPE="${{ steps.metadata.outputs.dependency-type }}"
          PACKAGE_MANAGER="${{ steps.metadata.outputs.package-manager }}"
          
          # Set conditions
          if [[ $UPDATE_TYPE == *"version-update:semver-patch"* ]]; then
            echo "::set-output name=auto_merge::true"
            echo "::set-output name=priority::high"
          elif [[ $UPDATE_TYPE == *"version-update:semver-minor"* ]] && [[ $DEPENDENCY_TYPE == "direct:development" ]]; then
            echo "::set-output name=auto_merge::true"
            echo "::set-output name=priority::medium"
          fi
          
          # Special handling for known safe dependencies
          if [[ ${{ steps.metadata.outputs.package-name }} =~ ^(@types/|eslint-|prettier-|typescript|jest|@testing-library/) ]]; then
            echo "::set-output name=auto_merge::true"
            echo "::set-output name=priority::safe"
          fi

      # Add labels based on update type
      - name: Add labels
        uses: actions/github-script@v6
        with:
          script: |
            const labels = ['dependencies'];
            
            // Update type labels
            if ('${{ steps.metadata.outputs.update-type }}'.includes('patch')) {
              labels.push('patch-update');
            } else if ('${{ steps.metadata.outputs.update-type }}'.includes('minor')) {
              labels.push('minor-update');
            } else {
              labels.push('major-update');
            }
            
            // Dependency type labels
            if ('${{ steps.metadata.outputs.dependency-type }}'.includes('direct:production')) {
              labels.push('prod-deps');
            } else {
              labels.push('dev-deps');
            }
            
            // Priority labels based on check
            if ('${{ steps.auto-merge-check.outputs.priority }}' === 'high') {
              labels.push('priority/high');
            } else if ('${{ steps.auto-merge-check.outputs.priority }}' === 'medium') {
              labels.push('priority/medium');
            }
            
            // Add labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });

      # Enable auto-merge for qualifying PRs
      - name: Enable auto-merge
        if: steps.auto-merge-check.outputs.auto_merge == 'true'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # Approve qualifying PRs
      - name: Approve PR
        if: steps.auto-merge-check.outputs.auto_merge == 'true'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # Add informative comment
      - name: Add PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ü§ñ Dependabot PR Analysis:
            - Update Type: `${{ steps.metadata.outputs.update-type }}`
            - Dependency Type: `${{ steps.metadata.outputs.dependency-type }}`
            - Auto-merge: `${{ steps.auto-merge-check.outputs.auto_merge }}`
            - Priority: `${{ steps.auto-merge-check.outputs.priority }}`
            
            ${steps.auto-merge-check.outputs.auto_merge == 'true' && '‚úÖ This PR qualifies for auto-merge' || '‚ö†Ô∏è Manual review required'}

      # Handle security updates specially
      - name: Process security updates
        if: contains(steps.metadata.outputs.dependency-type, 'security')
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üîí **Security Update Detected**
            This PR contains security-related changes and will be prioritized.
            Please review the changes carefully.
